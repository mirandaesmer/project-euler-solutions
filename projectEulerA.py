from math import sqrt
from typing import List


class ProjectEulerA:
    def problem1(self) -> int:
        # If we list all the natural numbers below 10 that are multiples of 3 or
        # 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. # Find the
        # sum of all the multiples of 3 or 5 below 1000.
        return sum([n for n in range(1000) if (n % 3 == 0) or (n % 5 == 0)])
    
    def _problem2(self, n: int, _sum: int, mem: List[int]) -> int:
        term = mem[n - 1] + mem[n - 2]
        mem[n] = term
        
        if term >= 4000000:
            return _sum
        if term % 2 == 0:
            _sum += term
        return self._problem2(n + 1, _sum, mem)
    
    def problem2(self) -> int:
        # Each new term in the Fibonacci sequence is generated by adding the
        # previous two terms. By starting with [1, 2] the first 10 terms will be
        #     1, 2, 3, 5, 8, 13, 21, 34, 55, 89
        # By considering the terms in the Fibonacci sequence whose values do not
        # exceed four million, find the sum of the even-valued terms.
        mem = [1,2] + ([0] * 100)
        return self._problem2(2, 2, mem)
        
    def problem3(self) -> int:
        # The prime factors of 13195 are 5, 7, 13 and 29
        # What is the largest prime factor of the number 600851475143?
        num = 600851475143
        upper_limit = sqrt(num)
        
        # TODO WIP
        # get first 50 primes
        return 0
    
    def problem4(self) -> int:
        # A palindromic number reads the same both ways. The largest palindrome
        # made from the product of two 2-digit numbers is 9009 = 91 * 99. Find
        # the largest palindrome made from the product of two 3-digit numbers.
        return 0
    
    def problem5(self) -> int:
        # 2520 is the smallest number that can be divided by each of the numbers
        # from 1 to 10 without any remainder. What is the smallest positive
        # number that is evenly divisible (divisible with no remainder by all of
        # the numbers from 1 to 20,
        return 0
        

if __name__ == "__main__":
    euler = ProjectEulerA()
    
    print(euler.problem1())  # solved
    print(euler.problem2())  # solved
    # print(problem3())  # unsolved
    # print(problem4())  # unsolved
    # print(problem5())  # unsolved
